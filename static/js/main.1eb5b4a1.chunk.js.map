{"version":3,"sources":["redux/blockchain/blockchainReducer.js","redux/data/dataReducer.js","redux/store.js","redux/data/dataActions.js","redux/blockchain/blockchainActions.js","styles/globalStyles.js","assets/images/kr3.png","assets/images/logo.png","assets/images/capture.png","App.js","reportWebVitals.js","index.js"],"names":["initialState","loading","account","smartContract","web3","errorMsg","blockchainReducer","state","action","type","payload","name","totalSupply","cost","error","dataReducer","rootReducer","combineReducers","blockchain","data","middleware","thunk","composeEnhancers","compose","applyMiddleware","store","createStore","fetchDataFailed","fetchData","dispatch","a","getState","methods","call","console","log","connectFailed","updateAccount","Screen","styled","div","image","SpacerSmall","SpacerMedium","SpacerLarge","Container","flex","fd","jc","ai","test","TextTitle","p","TextDescription","StyledButton","button","ResponsiveWrapper","StyledImg","img","App","useDispatch","useSelector","useState","feedback","setFeedback","claimingNft","setClaimingNft","getData","useEffect","style","backgroundColor","fontSize","padding","backgroundImage","display","flexDirection","textAlign","fontWeight","paddingRight","margin","borderStyle","borderColor","borderWidth","borderRadius","href","className","alt","src","width","height","paddingTop","marginBottom","fontFamily","color","paddingLeft","marginTop","maxWidth","Number","onClick","e","preventDefault","window","ethereum","isMetaMask","Web3EthContract","setProvider","Web3","request","method","accounts","SmartContractObj","SmartContract","on","location","reload","id","placeholder","min","max","disabled","_amount","document","getElementById","value","mint","send","gasLimit","to","from","utils","toWei","toString","once","err","then","receipt","textDecoration","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.1eb5b4a1.chunk.js","sourcesContent":["const initialState = {\n  loading: false,\n  account: null,\n  smartContract: null,\n  web3: null,\n  errorMsg: \"\",\n};\n\nconst blockchainReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CONNECTION_REQUEST\":\n      return {\n        ...initialState,\n        loading: true,\n      };\n    case \"CONNECTION_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        account: action.payload.account,\n        smartContract: action.payload.smartContract,\n        web3: action.payload.web3,\n      };\n    case \"CONNECTION_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        errorMsg: action.payload,\n      };\n    case \"UPDATE_ACCOUNT\":\n      return {\n        ...state,\n        account: action.payload.account,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default blockchainReducer;\n","const initialState = {\n  loading: false,\n  name: \"\",\n  totalSupply: 0,\n  cost: 0,\n  error: false,\n  errorMsg: \"\",\n};\n\nconst dataReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CHECK_DATA_REQUEST\":\n      return {\n        ...state,\n        loading: true,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        name: action.payload.name,\n        totalSupply: action.payload.totalSupply,\n        cost: action.payload.cost,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        error: true,\n        errorMsg: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default dataReducer;\n","import { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport blockchainReducer from \"./blockchain/blockchainReducer\";\nimport dataReducer from \"./data/dataReducer\";\n\nconst rootReducer = combineReducers({\n  blockchain: blockchainReducer,\n  data: dataReducer,\n});\n\nconst middleware = [thunk];\nconst composeEnhancers = compose(applyMiddleware(...middleware));\n\nconst configureStore = () => {\n  return createStore(rootReducer, composeEnhancers);\n};\n\nconst store = configureStore();\n\nexport default store;\n","// log\nimport store from \"../store\";\n\nconst fetchDataRequest = () => {\n  return {\n    type: \"CHECK_DATA_REQUEST\",\n  };\n};\n\nconst fetchDataSuccess = (payload) => {\n  return {\n    type: \"CHECK_DATA_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst fetchDataFailed = (payload) => {\n  return {\n    type: \"CHECK_DATA_FAILED\",\n    payload: payload,\n  };\n};\n\nexport const fetchData = (account) => {\n  return async (dispatch) => {\n    dispatch(fetchDataRequest());\n    try {\n      let name = await store\n        .getState()\n        .blockchain.smartContract.methods.name()\n        .call();\n      let totalSupply = await store\n        .getState()\n        .blockchain.smartContract.methods.totalSupply()\n        .call();\n      let cost = await store\n        .getState()\n        .blockchain.smartContract.methods.cost()\n        .call();\n\n      dispatch(\n        fetchDataSuccess({\n          name,\n          totalSupply,\n          cost,\n        })\n      );\n    } catch (err) {\n      console.log(err);\n      dispatch(fetchDataFailed(\"Could not load data from contract.\"));\n    }\n  };\n};\n","// constants\nimport Web3EthContract from \"web3-eth-contract\";\nimport Web3 from \"web3\";\nimport SmartContract from \"../../contracts/Doodlenauts.json\";\n// log\nimport { fetchData } from \"../data/dataActions\";\n\nconst connectRequest = () => {\n  return {\n    type: \"CONNECTION_REQUEST\",\n  };\n};\n\nconst connectSuccess = (payload) => {\n  return {\n    type: \"CONNECTION_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst connectFailed = (payload) => {\n  return {\n    type: \"CONNECTION_FAILED\",\n    payload: payload,\n  };\n};\n\nconst updateAccountRequest = (payload) => {\n  return {\n    type: \"UPDATE_ACCOUNT\",\n    payload: payload,\n  };\n};\n\nexport const connect = () => {\n  return async (dispatch) => {\n    dispatch(connectRequest());\n    const { ethereum } = window;\n    const metamaskIsInstalled = ethereum && ethereum.isMetaMask;\n    if (metamaskIsInstalled) {\n      Web3EthContract.setProvider(ethereum);\n      let web3 = new Web3(ethereum);\n      try {\n        const accounts = await ethereum.request({\n          method: \"eth_requestAccounts\",\n        });\n        const networkId = await ethereum.request({\n          method: \"net_version\",\n        });\n        // const NetworkData = await SmartContract.networks[networkId];\n        if (networkId == 1) { // IMPORTANT. ONCE YOUR CONTRACT IS ON THE MAIN NET, SWITCH THIS NUMBER TO 1.\n          const SmartContractObj = new Web3EthContract(\n            SmartContract,\n            \"0xcaA37C3822Cc2e7ABD2Ae2FE7EE85F053220A650\" // **IMPORTANT** PASTE CONTRACT ADDRESS HERE\n          );\n          dispatch(\n            connectSuccess({\n              account: accounts[0],\n              smartContract: SmartContractObj,\n              web3: web3,\n            })\n          );\n          // Add listeners start\n          ethereum.on(\"accountsChanged\", (accounts) => {\n            dispatch(updateAccount(accounts[0]));\n          });\n          ethereum.on(\"chainChanged\", () => {\n            window.location.reload();\n          });\n          // Add listeners end\n        } else {\n          dispatch(connectFailed(\"Change network to Ethereum.\"));\n        }\n      } catch (err) {\n        dispatch(connectFailed(\"Something went wrong.\"));\n      }\n    } else {\n      dispatch(connectFailed(\"Please install Metamask.\"));\n    }\n  };\n};\n\nexport const updateAccount = (account) => {\n  return async (dispatch) => {\n    dispatch(updateAccountRequest({ account: account }));\n    dispatch(fetchData(account));\n  };\n};\n","import styled from \"styled-components\";\n\n// Used for wrapping a page component\nexport const Screen = styled.div`\n  background-color: var(--dark-grey);\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n  width: 100%;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n`;\n\n// Used for providing space between components\nexport const SpacerXSmall = styled.div`\n  height: 8px;\n  width: 8px;\n`;\n\n// Used for providing space between components\nexport const SpacerSmall = styled.div`\n  height: 16px;\n  width: 16px;\n`;\n\n// Used for providing space between components\nexport const SpacerMedium = styled.div`\n  height: 24px;\n  width: 24px;\n`;\n\n// Used for providing space between components\nexport const SpacerLarge = styled.div`\n  height: 32px;\n  width: 32px;\n`;\n\n// Used for providing a wrapper around a component\nexport const Container = styled.div`\n  display: flex;\n  flex: ${({ flex }) => (flex ? flex : 0)};\n  flex-direction: ${({ fd }) => (fd ? fd : \"column\")};\n  justify-content: ${({ jc }) => (jc ? jc : \"flex-start\")};\n  align-items: ${({ ai }) => (ai ? ai : \"flex-start\")};\n  background-color: ${({ test }) => (test ? \"pink\" : \"none\")};\n  width: 100%;\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n`;\n\nexport const TextTitle = styled.p`\n  color: var(--white);\n  font-size: 18px;\n  font-weight: 500;\n  line-height: 1.6;\n`;\n\nexport const TextSubTitle = styled.p`\n  color: var(--white);\n  font-size: 14px;\n  line-height: 1.6;\n`;\n\nexport const TextDescription = styled.p`\n  color: var(--white);\n  font-size: 14px;\n  line-height: 1.6;\n`;\n\nexport const StyledClickable = styled.div`\n  :active {\n    opacity: 0.6;\n  }\n`;\n","export default __webpack_public_path__ + \"static/media/kr3.56b228b8.png\";","export default __webpack_public_path__ + \"static/media/logo.fe58751f.png\";","export default __webpack_public_path__ + \"static/media/capture.11346432.png\";","import React, { useEffect, useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { connect } from \"./redux/blockchain/blockchainActions\";\nimport { fetchData } from \"./redux/data/dataActions\";\nimport * as s from \"./styles/globalStyles\";\nimport styled from \"styled-components\";\nimport i1 from \"./assets/images/kr3.png\";\nimport newbanner from \"./assets/images/logo.png\";\nimport capture from \"./assets/images/capture.png\";\nimport \"./style.css\";\nimport { urlSource } from \"ipfs-http-client\";\n\nexport const StyledButton = styled.button`\n  padding: 10px;\n  border-radius: 50px;\n  border: none;\n  background-color: #ffffff;\n  padding: 10px;\n  padding-left: 15px;\n  padding-right: 15px;\n  font-weight: bold;\n  font-family: newfont;\n  font-size: 40px;\n  color: #000000;\n  cursor: pointer;\n  // box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  // -webkit-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  // -moz-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n  :hover {\n    transition-duration: 0.4s;\n    color: white;\n    background-color: black;\n  }\n`;\n\nexport const ResponsiveWrapper = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: stretched;\n  align-items: stretched;\n  width: 100%;\n  @media (min-width: 767px) {\n    flex-direction: row;\n  }\n`;\n\nexport const StyledImg = styled.img`\n  width: 285.6px;\n  height: (241.5) px;\n  @media (min-width: 767px) {\n    width: 428.5px;\n    height: 362.33px;\n  }\n  transition: width 0.5s;\n  transition: height 0.5s;\n`;\n\nfunction App() {\n  const dispatch = useDispatch();\n  const blockchain = useSelector((state) => state.blockchain);\n  const data = useSelector((state) => state.data);\n  const [feedback, setFeedback] = useState(\"\");\n  const [claimingNft, setClaimingNft] = useState(false);\n  const claimNFTs = (_amount) => {\n    _amount = document.getElementById(\"inputBox\").value;\n    if (_amount <= 0) {\n      return;\n    }\n    setFeedback(\"Minting your Cheeky Chimps NFT...\");\n    setClaimingNft(true);\n    blockchain.smartContract.methods\n      .mint(blockchain.account, _amount)\n      // ********\n      // You can change the line above to\n      // .whiteListMint(blockchain.account, _amount) if you want only whitelisted\n      // users to be able to mint through your website!\n      // And after you're done with whitelisted users buying from your website,\n      // You can switch it back to .mint(blockchain.account, _amount).\n      // ********\n      .send({\n        gasLimit: 285000 * _amount,\n        to: \"0xcaA37C3822Cc2e7ABD2Ae2FE7EE85F053220A650\", // the address of your contract\n        from: blockchain.account,\n        value: blockchain.web3.utils.toWei(\n          (0.0601 * _amount).toString(),\n          \"ether\"\n        ),\n      })\n      .once(\"error\", (err) => {\n        console.log(err);\n        setFeedback(\n          \"Sorry, something went wrong. Check your transaction on Etherscan to find out what happened!\"\n        );\n        setClaimingNft(false);\n      })\n      .then((receipt) => {\n        setFeedback(\"Your Cheeky Chimps NFT(s) has been successfully minted!\");\n        setClaimingNft(false);\n        dispatch(fetchData(blockchain.account));\n      });\n  };\n\n  const getData = () => {\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\n      dispatch(fetchData(blockchain.account));\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, [blockchain.account]);\n\n  return (\n    <s.Screen style={{ backgroundColor: \"var(--black)\", fontSize: 40 }}>\n      <s.Container\n        flex={1}\n        ai={\"center\"}\n        style={{\n          padding: 24,\n          backgroundImage:\n            'url(\"https://github.com/CheekyChimpsClub/Website/blob/main/static/media/brickwall.41a696bb.png?raw=true\")',\n        }}\n      >\n        <s.TextTitle\n          style={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            textAlign: \"left\",\n            fontSize: 12,\n            fontWeight: \"bold\",\n            paddingRight: 10,\n            margin: 0,\n            borderStyle: \"solid\",\n            borderColor: \"black\",\n            borderWidth: 0,\n            borderRadius: 50,\n            textAlign: \"center\",\n            justifySelf: \"center\",\n            justifyContent: \"center\",\n          }}\n        >\n          <a href=\"https://cheekychimps.club/\">\n            <StyledImg\n              className=\"logoShadow\"\n              alt={\"CC Logo\"}\n              src={\n                \"https://github.com/CheekyChimpsClub/Website/blob/main/static/media/CenterPic.7f3fb613.png?raw=true\"\n              }\n              style={{ width: 100, height: 100, textAlign: \"center\" }}\n            ></StyledImg>\n          </a>\n        </s.TextTitle>\n        <s.SpacerMedium />\n        <ResponsiveWrapper flex={1} style={{ padding: 24, paddingTop: 0 }}>\n          <s.Container\n            flex={1}\n            jc={\"center\"}\n            ai={\"center\"}\n            style={{ paddingTop: 0, flexDirection: \"column\" }}\n          >\n            <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n              <StyledImg\n                className=\"object\"\n                alt={\"CC\"}\n                src={\"https://github.com/CheekyChimpsClub/Website/blob/main/static/media/Cheeky.7c2d0d97.gif?raw=true\"}\n                style={{\n                  paddingTop: 0,\n                  borderStyle: \"solid\",\n                  borderColor: \"black\",\n                  borderWidth: 5,\n                  borderRadius: 5,\n                  marginBottom: 15,\n                  height: 300,\n                  width: 230\n                }}\n              />\n              <StyledImg\n                className=\"object\"\n                alt={\"CC\"}\n                src={\"https://github.com/CheekyChimpsClub/Website/blob/main/static/media/Evil.4c83a1de.gif?raw=true\"}\n                style={{\n                  paddingTop: 0,\n                  borderStyle: \"solid\",\n                  borderColor: \"black\",\n                  borderWidth: 5,\n                  borderRadius: 5,\n                  marginBottom: 15,\n                  height: 300,\n                  width: 230\n                }}\n              />\n              <StyledImg\n                className=\"object\"\n                alt={\"CC\"}\n                src={\"https://github.com/CheekyChimpsClub/Website/blob/main/static/media/Super.ff4160f4.gif?raw=true\"}\n                style={{\n                  paddingTop: 0,\n                  borderStyle: \"solid\",\n                  borderColor: \"black\",\n                  borderWidth: 5,\n                  borderRadius: 5,\n                  marginBottom: 15,\n                  height: 300,\n                  width: 230\n                }}\n              />\n            </div>\n\n            <s.TextTitle\n              style={{\n                textAlign: \"center\",\n                fontSize: 30,\n                borderStyle: \"solid\",\n                borderColor: \"black\",\n                fontFamily: \"newfont\",\n                color: \"white\"\n              }}\n            >\n              0.06 ETH + Gas\n            </s.TextTitle>\n            <text style={{ color: \"white\", fontFamily: \"newfont\", fontSize: 25 }}>{blockchain.account == null ? \"?\" : data.totalSupply} / 2,222 minted</text>\n            {/* <s.SpacerSmall/> */}\n            <s.TextTitle\n              style={{\n                textAlign: \"center\",\n                fontSize: 80,\n                borderStyle: \"solid\",\n                borderColor: \"black\",\n                borderWidth: 0,\n                paddingLeft: 100,\n                paddingRight: 100,\n                borderRadius: 0,\n                paddingTop: 0,\n                marginTop: 0,\n                marginBottom: 0,\n              }}\n            ></s.TextTitle>\n            {/* <s.SpacerMedium/> */}\n            <s.Container\n              flex={1}\n              jc={\"center\"}\n              ai={\"center\"}\n              style={{\n                backgroundImage: 'url(\"https://github.com/seanpen00/CheekyChimpsMintingPage/blob/main/src/assets/images/capture.png?raw=true\")',\n                padding: 24,\n                paddingTop: 0,\n                borderStyle: \"solid\",\n                borderColor: \"black\",\n                borderWidth: 10,\n                borderRadius: 0,\n                fontSize: 40,\n                maxWidth: 1000,\n                textAlign: \"center\",\n              }}\n            >\n              {Number(data.totalSupply) == 9999 ? (\n                <>\n                  <s.TextTitle style={{ textAlign: \"center\" }}>\n                    The sale has ended.\n                  </s.TextTitle>\n                  <s.SpacerSmall />\n                  <s.TextDescription style={{ textAlign: \"center\" }}>\n                    Dont worry, you're not missing out! You can still get\n                    Cheeky Chimps on{\" \"}\n                    <a\n                      // target={\"_blank\"}\n                      href={\"https://opensea.io/collection/Cheeky Chimps\"}\n                    >\n                      Opensea.io\n                    </a>\n                  </s.TextDescription>\n                </>\n              ) : (\n                <>\n                  {/* <s.TextTitle style={{ textAlign: \"center\", fontSize: 30 }}>\n                  1 KR costs .01 ETH.\n                </s.TextTitle>\n                <s.SpacerXSmall />\n                <s.TextDescription style={{ textAlign: \"center\", fontSize: 30 }}>\n                  Excluding gas fees.\n                </s.TextDescription>\n                <s.SpacerSmall /> */}\n                  <s.TextDescription\n                    style={{ textAlign: \"center\", fontSize: 40 }}\n                  >\n                    {feedback}\n                  </s.TextDescription>\n                  {/* <s.SpacerMedium /> */}\n                  {blockchain.account === \"\" ||\n                    blockchain.smartContract === null ? (\n                    <s.Container ai={\"center\"} jc={\"center\"}>\n                      <s.TextDescription\n                        className=\"connectMint\"\n                        style={{\n                          fontSize: 50,\n                          color: \"white\",\n                          textAlign: \"center\",\n                          marginBottom: 0,\n                          fontFamily: \"newfont\",\n                        }}\n                      >\n                        Connect your wallet to Mint\n                      </s.TextDescription>\n                      <s.SpacerSmall />\n                      <StyledButton\n                        onClick={(e) => {\n                           e.preventDefault();\n                           dispatch(connect());\n                           getData();\n                          // UNCOMMENT THESE WHEN YOU ARE READY TO LAUNCH.\n                        }}\n                      >\n                        CONNECT\n                      </StyledButton>\n                      <s.SpacerLarge />\n                      {/* <s.TextDescription style={{textAlign: \"center\", fontSize: 30, marginBottom: 0, paddingBottom: 0}}>\n                      <a href=\"https://google.com\">Cheeky Chimps NFT Smart Contract</a>\n                    </s.TextDescription> */}\n                      {blockchain.errorMsg !== \"\" ? (\n                        <>\n                          <s.SpacerSmall />\n                          <s.TextDescription\n                            style={{ textAlign: \"center\", fontSize: 50 }}\n                          >\n                            {blockchain.errorMsg}\n                          </s.TextDescription>\n                        </>\n                      ) : null}\n                    </s.Container>\n                  ) : (\n                    <s.Container\n                      ai={\"center\"}\n                      jc={\"center\"}\n                      fd={\"column\"}\n                      style={{ marginTop: 0, paddingTop: 20, fontFamily: \"newfont\" }}\n                    >\n                      <form>\n                        Mint{\" \"}\n                        <input\n                          id=\"inputBox\"\n                          placeholder=\"0\"\n                          type=\"number\"\n                          min=\"1\"\n                          max=\"10\"\n                          style={{\n                            fontSize: 40,\n                            textAlign: \"center\",\n                            backgroundColor: \"white\",\n                            borderWidth: 3,\n                            borderColor: \"black\",\n                            borderStyle: \"solid\",\n                            borderRadius: 10,\n                            paddingRight: 10,\n                            // marginBottom: 20,\n                            // paddingLeft: 0,\n                            // marginLeft: 0,\n                            width: 100,\n                            height: 60,\n                          }}\n                        />{\" \"}\n                        Cheeky Chimps NFT\n                      </form>\n                      <s.SpacerSmall />\n                      <StyledButton\n                        disabled={claimingNft ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          claimNFTs(1);\n                          getData();\n                        }}\n                      >\n                        {claimingNft ? \"BUSY\" : \"MINT\"}\n                      </StyledButton>\n                      <s.SpacerSmall />\n                    </s.Container>\n                  )}\n                </>\n              )}\n              <br />\n\n            </s.Container>\n          </s.Container>\n          {/* <s.SpacerMedium /> */}\n        </ResponsiveWrapper>\n\n\n        <s.SpacerSmall />\n        <s.Container jc={\"center\"} ai={\"center\"} style={{ width: \"70%\" }}>\n          <s.TextDescription style={{ textAlign: \"center\", fontSize: 40 }}>\n            <a\n              href=\"https://etherscan.io/address/0xcaA37C3822Cc2e7ABD2Ae2FE7EE85F053220A650\"\n              style={{\n                textDecoration: \"none\",\n                color: \"white\",\n                fontSize: 20,\n                fontFamily: \"newfont\"\n              }}\n            >\n              Cheeky Chimps Smart Contract\n            </a>\n          </s.TextDescription>\n          <s.SpacerSmall />\n          {/* <s.TextDescription style={{ textAlign: \"center\", fontSize: 9 }}>\n          </s.TextDescription> */}\n        </s.Container>\n      </s.Container>\n    </s.Screen>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport \"./styles/reset.css\";\nimport \"./styles/theme.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}